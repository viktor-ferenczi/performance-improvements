using System;
using System.Runtime.InteropServices;

namespace Shared.Tools
{
    /* Generated by Claude. Prompt:

     How to detect from a Windows binary if it is running inside wine or Proton on Linux?
     Write C# 7.3 code for .NET Framework 4.8.1

     */
    public static class WineDetector
    {
        [DllImport("ntdll.dll", EntryPoint = "wine_get_version", CallingConvention = CallingConvention.Cdecl)]
        private static extern IntPtr WineGetVersion();

        public static bool IsRunningInWineOrProton()
        {
            try
            {
                // Check if wine_get_version function exists
                IntPtr wineVersion = WineGetVersion();
                if (wineVersion != IntPtr.Zero)
                {
                    // string version = Marshal.PtrToStringAnsi(wineVersion);
                    // Console.WriteLine($"Running in Wine/Proton. Version: {version}");
                    return true;
                }
            }
            catch (DllNotFoundException)
            {
                // If ntdll.dll is not found or wine_get_version function doesn't exist,
                // it's likely not running in Wine/Proton
            }
            catch (Exception)
            {
                // Console.WriteLine($"An error occurred: {ex.Message}");
            }

            // Additional checks
            if (Environment.GetEnvironmentVariable("WINE_WINDOWS_DIR") != null ||
                Environment.GetEnvironmentVariable("WINELOADERNOEXEC") != null ||
                Environment.GetEnvironmentVariable("PROTON_VERSION") != null)
            {
                // Console.WriteLine("Running in Wine/Proton (detected via environment variables)");
                return true;
            }

            // Check for Proton-specific environment variable
            string steamRuntimePath = Environment.GetEnvironmentVariable("STEAM_RUNTIME");
            if (!string.IsNullOrEmpty(steamRuntimePath) && steamRuntimePath.Contains("steamrt"))
            {
                // Console.WriteLine("Running in Proton (detected via Steam Runtime)");
                return true;
            }

            // Console.WriteLine("Not running in Wine/Proton");
            return false;
        }
    }
}